name: Go

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  # Vet Go code
  vet-go:
    name: Vet Go code
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4.1.5
        with:
          submodules: recursive

      - name: Set up Go
        uses: actions/setup-go@v5.0.1
        with:
          go-version-file: go.mod

      - name: Vet Go code
        run: go vet ./...

  # Test with Go
  test-go:
    name: Test with Go
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        go-version: ["1.22"]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4.1.5
        with:
          submodules: recursive

      - name: Set up wasm-tools
        uses: bytecodealliance/actions/wasm-tools/setup@v1.1.0
        with:
          version: v1.205.0

      - name: Set up Go
        uses: actions/setup-go@v5.0.1
        with:
          go-version: ${{ matrix.go-version }}

      - name: Run Go tests
        run: go test -v ./...

      - name: Run Go tests with race detector
        run: go test -v -race ./...

      - name: Test Go without cgo
        env:
          CGO_ENABLED: 0
        run: go test -v ./...

      - name: Verify repo is unchanged
        run: git diff --exit-code HEAD

  # Test with TinyGo
  test-tinygo:
    name: Test with TinyGo
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        tinygo-version: ["0.31.2"]
        go-version: ["1.22"]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4.1.5
        with:
          submodules: recursive

      - name: Set up wasm-tools
        uses: bytecodealliance/actions/wasm-tools/setup@v1.1.0
        with:
          version: v1.205.0

      - name: Set up Go
        uses: actions/setup-go@v5.0.1
        with:
          go-version: ${{ matrix.go-version }}

      - name: Set up TinyGo
        uses: acifani/setup-tinygo@v2.0.0
        with:
          tinygo-version: ${{ matrix.tinygo-version }}

      - name: Test with TinyGo
        run: tinygo test -stack-size=64KB -v ./...

      - name: Verify repo is unchanged
        run: git diff --exit-code HEAD

  # Test with WebAssembly
  test-wasm:
    name: Test with WebAssembly
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        wasmtime-version: ["19.0.1"]
        tinygo-version: ["0.31.2"]
        go-version: ["1.22"] # WASI Preview 1 only available in Go 1.21 or later
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4.1.5
        with:
          submodules: recursive

      - name: Set up wasm-tools
        uses: bytecodealliance/actions/wasm-tools/setup@v1.1.0
        with:
          version: v1.205.0

      - name: Set up Wasmtime
        uses: bytecodealliance/actions/wasmtime/setup@v1.1.0
        with:
          version: ${{ matrix.wasmtime-version }}

      - name: Set up Go
        uses: actions/setup-go@v5.0.1
        with:
          go-version: ${{ matrix.go-version }}

      - name: Set up TinyGo
        uses: acifani/setup-tinygo@v2.0.0
        with:
          tinygo-version: ${{ matrix.tinygo-version }}

      - name: Add Go wasm exec to $PATH
        run: echo "$(go env GOROOT)/misc/wasm" >> $GITHUB_PATH

      - name: Test WebAssembly with Go + Wasmtime
        env:
          GOOS: wasip1
          GOARCH: wasm
        run: go test -v ./...

      - name: Test WebAssembly with TinyGo + Wasmtime
        env:
          GOOS: wasip1
          GOARCH: wasm
        run: tinygo test -stack-size=64KB -v ./...

      - name: Verify repo is unchanged
        run: git diff --exit-code HEAD
